services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-0.0.0.0} # Change this to your domain if using a reverse proxy
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http} # Use https in production
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL:-http://localhost:5678}
      - NODE_ENV=production # Set to production for stability
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-secure-key-here} # Change this!
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-your-secure-password}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Asia/Kolkata}
      - TZ=${TZ:-Asia/Kolkata}
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE:-n8n}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD:-your-db-password}
      # Redis Configuration (for queue execution, uncomment if needed)
      # - QUEUE_BULL_REDIS_HOST=redis
      # - QUEUE_BULL_REDIS_PORT=6379
      # Webhook Configuration
      # - WEBHOOK_URL=https://your-domain.com # Uncomment if using webhooks
      # Add the license key here ðŸ‘‡
      - N8N_LICENSE_KEY=defb077f-53d5-4605-8003-181961731111-10do
    volumes:
      - n8n_data:/home/node/.n8n
      - ./custom:/home/node/.n8n/custom # Uncomment if you need custom extensions
    networks:
      - n8n_network
    depends_on:
      - postgres
      # - redis  # Uncomment if using Redis for job queue

  postgres:
    image: postgres:15-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_POSTGRESDB_USER:-n8n}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD:-your-db-password}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Uncomment to enable Redis for job queueing
  # redis:
  #   image: redis:7
  #   container_name: n8n_redis
  #   restart: unless-stopped
  #   command: ["redis-server", "--appendonly", "yes"]
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - n8n_network

volumes:
  n8n_data:
  postgres_data:
  # redis_data: # Uncomment if Redis is used

networks:
  n8n_network:
    driver: bridge
